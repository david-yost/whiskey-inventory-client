/* tslint:disable */
/* eslint-disable */
/**
 * Achaia.Wiskey.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReleaseType } from './ReleaseType';
import {
    ReleaseTypeFromJSON,
    ReleaseTypeFromJSONTyped,
    ReleaseTypeToJSON,
} from './ReleaseType';
import type { Distillery } from './Distillery';
import {
    DistilleryFromJSON,
    DistilleryFromJSONTyped,
    DistilleryToJSON,
} from './Distillery';

/**
 * 
 * @export
 * @interface Bottle
 */
export interface Bottle {
    /**
     * 
     * @type {number}
     * @memberof Bottle
     */
    bottleId?: number;
    /**
     * 
     * @type {string}
     * @memberof Bottle
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof Bottle
     */
    proof?: number;
    /**
     * 
     * @type {number}
     * @memberof Bottle
     */
    ageYears?: number;
    /**
     * 
     * @type {number}
     * @memberof Bottle
     */
    ageMonths?: number;
    /**
     * 
     * @type {ReleaseType}
     * @memberof Bottle
     */
    releaseType?: ReleaseType;
    /**
     * 
     * @type {Distillery}
     * @memberof Bottle
     */
    distillery?: Distillery;
}

/**
 * Check if a given object implements the Bottle interface.
 */
export function instanceOfBottle(value: object): value is Bottle {
    return true;
}

export function BottleFromJSON(json: any): Bottle {
    return BottleFromJSONTyped(json, false);
}

export function BottleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Bottle {
    if (json == null) {
        return json;
    }
    return {
        
        'bottleId': json['bottleId'] == null ? undefined : json['bottleId'],
        'name': json['name'] == null ? undefined : json['name'],
        'proof': json['proof'] == null ? undefined : json['proof'],
        'ageYears': json['ageYears'] == null ? undefined : json['ageYears'],
        'ageMonths': json['ageMonths'] == null ? undefined : json['ageMonths'],
        'releaseType': json['releaseType'] == null ? undefined : ReleaseTypeFromJSON(json['releaseType']),
        'distillery': json['distillery'] == null ? undefined : DistilleryFromJSON(json['distillery']),
    };
}

export function BottleToJSON(value?: Bottle | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'bottleId': value['bottleId'],
        'name': value['name'],
        'proof': value['proof'],
        'ageYears': value['ageYears'],
        'ageMonths': value['ageMonths'],
        'releaseType': ReleaseTypeToJSON(value['releaseType']),
        'distillery': DistilleryToJSON(value['distillery']),
    };
}

